server:
  port: 8081
  error:
    include-message: always
    include-binding-errors: always
    include-exception: false
    # 如果前端请求带参 ?trace=true 则会显示 trace 字段
    include-stacktrace: on_param

spring:
  cloud:
    zookeeper:
      connect-string: ${ZOOKEEPER_HOST:localhost}:${ZOOKEEPER_PORT:2181}
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 5000
            loggerLevel: full
      autoconfiguration:
        jackson:
          enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${KEYCLOAK_HOST:localhost}:8080/auth/realms/${KEYCLOAK_REALM:console-app}/protocol/openid-connect/certs
  jpa:
    # 性能优化点，但是是否要打开，需要考虑具体情况
    # 参考文献：https://www.baeldung.com/spring-open-session-in-view
    open-in-view: true

minio:
  endpoint: http://${MINIO_HOST:localhost}:${MINIO_PORT:9000}/
  username: ${MINIO_ROOT_USER:minio-root-user}
  password: ${MINIO_ROOT_PASSWORD:minio-root-password}
  bucket: ${MINIO_DEFAULT_BUCKET:tp-bucket}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    oauth:
      client-id: console-cli

keycloak:
  realm: ${KEYCLOAK_REALM:app}
  client-id: ${KEYCLOAK_CLIENT_ID:console-cli}
  auth-server-url: http://${KEYCLOAK_HOST:localhost}:8080/auth
  use-endpoints: false
  admin:
    password: admin
    username: admin

app:
  datasource:
    biz:
      url: jdbc:postgresql://${MYSQL_HOST:localhost}:5432/biz
      jdbcUrl: jdbc:postgresql://${MYSQL_HOST:localhost}:5432/biz
      username: root
      password: ${MYSQL_ROOT_PASSWORD:example}
      driver-class-name: org.postgresql.Driver
      dialect: org.hibernate.dialect.PostgreSQLDialect
      liquibase:
        change-log: db/changelog/changelog-master.xml
    keycloak:
      url: jdbc:postgresql://${MYSQL_HOST:localhost}:5432/keycloak
      jdbcUrl: jdbc:postgresql://${MYSQL_HOST:localhost}:5432/keycloak
      username: root
      password: ${MYSQL_ROOT_PASSWORD:example}
      driver-class-name: org.postgresql.Driver
      dialect: org.hibernate.dialect.PostgreSQLDialect